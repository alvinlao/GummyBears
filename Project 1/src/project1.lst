0000              1   ;------------------------------------------------
0000              2   ;        PROJECT 1: Reflow Oven
0000              3   ;------------------------------------------------
0000              4   ;        GROUP:                  A5
0000              5   ;------------------------------------------------
0000              6   ;        MEMBERS:        Alvin Lao                       32510117
0000              7   ;                                David Henderson                 
0000              8   ;                                Zhenzheng Xia           
0000              9   ;                                Bibek Kaur                      15093123
0000             10   ;                                Jappy Sran                      68226042
0000             11   ;                                Haowei Yu
0000             12   ;------------------------------------------------
0000             13   
                 -1   $MODDE2
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER - HIGH BYTE
0000             24   PCON   DATA  087H  ;POWER CONTROL
0000             25   TCON   DATA  088H  ;TIMER CONTROL
0000             26   TMOD   DATA  089H  ;TIMER MODE
0000             27   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             28   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             29   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             30   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             31   P1     DATA  090H  ;PORT 1
0000             32   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             33   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             34   P2     DATA  0A0H  ;PORT 2
0000             35   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             36   P3     DATA  0B0H  ;PORT 3
0000             37   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             38   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             39   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             40   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             41   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             42   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             43   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             44   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             45   ACC    DATA  0E0H  ;ACCUMULATOR
0000             46   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             47   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             48   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             49   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             50   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             51   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             52   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             53   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             54   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             55   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             56   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             57   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             58   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             59   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             60   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             61   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             62   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             63   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             64   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             65   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             66   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             67   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             68   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             69   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             70   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             71   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             72   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             73   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             74   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             75   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             76   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             77   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             78   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             79   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             80   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             81   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             82   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             83   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             84   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             85   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             86   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             87   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             88   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             89   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             90   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             91   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             92   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             93   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             94   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             95   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             96   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000             97   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000             98   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000             99   
0000            100   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            101   ; we have the following extra registers:
0000            102   
0000            103   HEX0   DATA  091H ; Zero turns the segment on
0000            104   HEX1   DATA  092H ; 
0000            105   HEX2   DATA  093H ; 
0000            106   HEX3   DATA  094H ; 
0000            107   HEX4   DATA  08EH ;
0000            108   HEX5   DATA  08FH ;
0000            109   HEX6   DATA  096H ;
0000            110   HEX7   DATA  097H ;
0000            111   
0000            112   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            113   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            114   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            115   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            116   
0000            117   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            118   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            119   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            120   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            121   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            122   SWB    DATA  095H ; Switches SW8 to SW15
0000            123   SWC    DATA  09EH ; Switches SW16 and SW17
0000            124   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            125   
0000            126   LCD_CMD   DATA 0D8H ;
0000            127   LCD_DATA  DATA 0D9H ;
0000            128   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            129   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            130   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            131   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            132   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            133   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            134   
0000            135   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            136   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            137   ; bit 1: FL_WE_N
0000            138   ; bit 2: FL_OE_N
0000            139   ; bit 3: FL_CE_N
0000            140   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            141   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            142   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            143   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            144   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            145   
0000             15   
0000             16   org 0000H
0000 0208F5      17      ljmp MyProgram
0003             18   
001B             19   ORG 001BH
001B 0200D5      20            ljmp ISR_timer1_buzzer
001E             21            
0030             22   DSEG at 30H
0030             23            ;VARIABLES
0030             24            currentTemp:            DS 1
0031             25            
0031             26            ;MATH16.asm     
0031             27            output:                                 DS 1
0032             28            x:                                      DS 2
0034             29            y:                                      DS 2
0036             30            bcd:                            DS 3
0039             31   
0000             32   BSEG
0000             33            mf:                                     DBIT 1
0001             34   
0001             35   ;-------------------------------------
0001             36   ; Utility
0001             37   ;-------------------------------------
                 -1   $include(util/helper.asm)
0001              1   ;------------------------------------------------
0001              2   ; helper.asm
0001              3   ;------------------------------------------------
0001              4   ; Useful functions
0001              5   ;------------------------------------------------
0001              6   ; Author: Alvin Lao
0001              7   ;------------------------------------------------
0001              8   
                 80   $LIST
                 -1   	$include(util/spi.asm)
0068              1   ;------------------------------------------------
0068              2   ; spi.asm
0068              3   ;------------------------------------------------
0068              4   ; ADC interface
0068              5   ;------------------------------------------------
0068              6   ; Author: Alvin Lao
0068              7   ;------------------------------------------------
00AC             92   $LIST
                 -1   $include(util/serial.asm)
00AC              1   ;------------------------------------------------
00AC              2   ; serial.asm
00AC              3   ;------------------------------------------------
00AC              4   ; Used to send information through the serial port
00AC              5   ;------------------------------------------------
00AC              6   ; Author: Alvin Lao
00AC              7   ;------------------------------------------------
00AC              8   
00D5             73   $LIST    
                 -1   $include(util/buzzer.asm)
00D5              1   ;------------------------------------------------
00D5              2   ; buzzer.asm
00D5              3   ;------------------------------------------------
00D5              4   ; Provides buzzer functionality
00D5              5   ;------------------------------------------------
00D5              6   ; NOTE: 
00D5              7   ;        Requires timer 1
00D5              8   ;------------------------------------------------
00D5              9   ; Author: 
00D5             10   ;------------------------------------------------
00D5             11   
00F0             78   $LIST
                 -1   $include(util/LCD.asm)
00F0              1   ;------------------------------------------------
00F0              2   ; LCD.asm
00F0              3   ;------------------------------------------------
00F0              4   ; Provides functions for using the LCD
00F0              5   ;------------------------------------------------
00F0              6   ; Author: 
00F0              7   ;------------------------------------------------
00F0              8   
00F2             34   $LIST
                 -1   $include(util/math16.asm)
                428   $LIST
02CC             44   
02CC             45   ;-------------------------------------
02CC             46   ; States
02CC             47   ;-------------------------------------
                 -1   $include(setup.asm)				;Initial user configuration
02CC              1   ;------------------------------------------------
02CC              2   ; setup.asm
02CC              3   ;------------------------------------------------
02CC              4   ; Initial setup loop
02CC              5   ; Allow user to set reflow soldering parameters
02CC              6   ;------------------------------------------------
02CC              7   ; Author: 
02CC              8   ;------------------------------------------------
02CC              9   
02CD             32   $LIST
                 -1   $include(live.asm)				;Initial user configuration
02CD              1   ;------------------------------------------------
02CD              2   ; live.asm
02CD              3   ;------------------------------------------------
02CD              4   ; Update the board state during reflow soldering
02CD              5   ;------------------------------------------------
02CD              6   ; DEPENDENCIES:
02CD              7   ;        util/LCD.asm
02CD              8   ;------------------------------------------------
02CD              9   ; Author: 
02CD             10   ;------------------------------------------------
02CD             11   
02CE             30   $LIST
                 -1   $include(finish.asm)			;Final exit instructions
02CE              1   ;------------------------------------------------
02CE              2   ; finish.asm
02CE              3   ;------------------------------------------------
02CE              4   ; Called after the reflow soldering
02CE              5   ; Perhaps LCD animation and buzzer music?
02CE              6   ;------------------------------------------------
02CE              7   ; DEPENDENCIES:
02CE              8   ;        util/buzzer.asm
02CE              9   ;        util/LCD.asm
02CE             10   ;------------------------------------------------
02CE             11   ; Author: 
02CE             12   ;------------------------------------------------
02CE             13   
02CF             26   $LIST
02CF             51   
02CF             52   ;-------------------------------------
02CF             53   ; Oven
02CF             54   ;-------------------------------------
                 -1   $include(oven/driver.asm)		;Oven driver
02CF              1   ;------------------------------------------------
02CF              2   ; driver.asm
02CF              3   ;------------------------------------------------
02CF              4   ; Author: Bibek Kaur
02CF              5   ;------------------------------------------------
02CF              6   
03E3            309   $LIST    
                 -1   $include(oven/controller.asm)		;Oven controller
03E3              1   ;------------------------------------------------
03E3              2   ; controller.asm
03E3              3   ;------------------------------------------------
03E3              4   ; Control the oven as specified by the reflow soldering parameters
03E3              5   ;------------------------------------------------
03E3              6   ; DEPENDENCIES:
03E3              7   ;        driver.asm
03E3              8   ;        ../util/buzzer.asm
03E3              9   ;------------------------------------------------
03E3             10   ; Author: 
03E3             11   ;------------------------------------------------
03E3             12   
03E4             40   $LIST
03E4             57   
03E4             58   ;-------------------------------------
03E4             59   ; Temperature
03E4             60   ;-------------------------------------
                 -1   $include(temperature/lm335.asm)		;LM335 voltage to temperature conversion
03E4              1   ;------------------------------------------------
03E4              2   ; lm335.asm
03E4              3   ;------------------------------------------------
03E4              4   ; LM335 conversion functions
03E4              5   ;------------------------------------------------
03E4              6   ; Author: David Henderson
03E4              7   ;------------------------------------------------
03E4              8    
067F            688   $LIST
                 -1   $include(temperature/lookup.asm)	;Lookup table and functions
067F              1   ;------------------------------------------------
067F              2   ; lookup.asm
067F              3   ;------------------------------------------------
067F              4   ; K-type thermocouple lookup table
067F              5   ; <key, value> => <temperature (0 - 255), voltage (microvolts)>
067F              6   ;------------------------------------------------
067F              7   ; David
067F              8   ;------------------------------------------------
067F              9   
                335   $LIST
                 -1   $include(temperature/sensor.asm)	;Handle oven temperature
08AB              1   ;------------------------------------------------
08AB              2   ; sensor.asm
08AB              3   ;------------------------------------------------
08AB              4   ; Sensor for oven temperature 
08AB              5   ;------------------------------------------------
08AB              6   ; DEPENDENCIES:
08AB              7   ;        spi.asm
08AB              8   ;        lm335.asm
08AB              9   ;        lookup.asm
08AB             10   ;        ../util/math16.asm
08AB             11   ;------------------------------------------------
08AB             12   ; Author: Alvin Lao
08AB             13   ;------------------------------------------------
08AB             14   
08F5             96   $LIST
08F5             64   
08F5             65   CSEG
08F5             66   
08F5             67   ;-------------------------------------
08F5             68   ;MAIN PROGRAM
08F5             69   ;-------------------------------------
08F5             70   myprogram:
08F5 75817F      71       MOV SP, #7FH
08F8 75E800      72       mov LEDRA, #0
08FB 759500      73       mov LEDRB, #0
08FE 759E00      74       mov LEDRC, #0
0901 75F800      75       mov LEDG, #0
0904 439A38      76            orl P0MOD, #00111000b           ; make all CEs outputs
0907             77            
0907 120068      78            lcall setup_spi                                 ; ADC SPI (Input)
090A 1200AC      79       lcall setup_serial                   ; Serial (Output)
090D             80            
090D             81   mainLoop:
090D 1208D4      82            lcall getOvenTemp_sensor        ; temp[R0] getOvenTemp(coldVoltage, ovenVoltage)
0910 88E8        83            mov LEDRA, R0
0912             84            
0912 8832        85            mov x, R0
0914 753300      86            mov x+1, #0
0917 1200F2      87            lcall hex2bcd
091A 120037      88            lcall displayBCD_helper                 ; Display the temp on HEX
091D             89            
091D             90   ;        lcall logTemperature            ; void logTemperature(temp [R0])
091D             91   
091D 12002A      92            lcall Wait_helper
0920 80EB        93            sjmp mainLoop
